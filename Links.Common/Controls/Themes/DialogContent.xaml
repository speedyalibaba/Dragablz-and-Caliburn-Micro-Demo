<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:cal="http://www.caliburnproject.org"
					xmlns:s="clr-namespace:System;assembly=mscorlib"
				    xmlns:local="clr-namespace:Links.Common.Controls" >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
		<ResourceDictionary>
			<s:Boolean x:Key="True">True</s:Boolean>
			<s:Boolean x:Key="False">False</s:Boolean>
		</ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>

    <Style x:Key="DialogContent" x:Shared="False" TargetType="{x:Type local:DialogContent}">
        <Style.Resources>
            <Style x:Key="RobotoTextBlock" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
            </Style>
            <Style x:Key="DialogHeading" TargetType="TextBlock" BasedOn="{StaticResource RobotoTextBlock}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Margin" Value="4" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>
            <!--<Style TargetType="CheckBox" BasedOn="{StaticResource AskCheckBox}" />
			<Style TargetType="TextBox" BasedOn="{StaticResource FloatingHintTextBox}" />
			<Style TargetType="ComboBox" BasedOn="{StaticResource FloatingHintComboBox}" />-->
            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="wpf:RippleAssist.IsCentered" Value="True" />
            </Style>
            <!--<Style TargetType="PasswordBox" BasedOn="{StaticResource FloatingHintPasswordBox}" />
			<Style TargetType="ToggleButton" BasedOn="{StaticResource SwitchToggleButton}" />
			<Style TargetType="DatePicker" BasedOn="{StaticResource FloatingHintDatePicker}" />-->
        </Style.Resources>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="TextElement.FontWeight" Value="Medium" />
        <Setter Property="TextElement.FontSize" Value="14" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="IsBusy" Value="{Binding Path=IsBusy}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DialogContent}">
                    <Grid Focusable="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <wpf:ColorZone Effect="{StaticResource MaterialDesignShadowDepth1}"
                                       Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource boolToCollapsed}}">
                            <DockPanel Margin="5">
                                <Button Style="{TemplateBinding CloseButtonStyle}" DockPanel.Dock="Right" IsCancel="True" Focusable="False" Margin="0" Padding="4"
											Command="{x:Static wpf:DialogHost.CloseDialogCommand}" CommandParameter="{StaticResource False}">
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                                <TextBlock Text="{TemplateBinding Header}" Style="{StaticResource DialogHeading}" VerticalAlignment="Center" Margin="6 0"/>
                            </DockPanel>
                        </wpf:ColorZone>
                        <local:BusyIndicator Grid.Row="1" IsBusy="{TemplateBinding IsBusy}">
                            <Grid Focusable="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                    <ContentPresenter Content="{TemplateBinding Content}" Focusable="False" />
                                </ScrollViewer>
                                <wpf:ColorZone Mode="Standard" Grid.Row="1" >
                                    <ContentPresenter Content="{TemplateBinding Buttons}" />
                                </wpf:ColorZone>
                            </Grid>
                        </local:BusyIndicator>

                        <wpf:Snackbar Grid.RowSpan="2" MessageQueue="{TemplateBinding MessageQueue}" x:Name="DialogSnackbar"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentDialogContent" x:Shared="False" TargetType="{x:Type local:DialogContent}" BasedOn="{StaticResource DialogContent}">
		<Style.Resources>
			<Style TargetType="wpf:ColorZone">
				<Setter Property="Mode" Value="PrimaryMid"/>
			</Style>
		</Style.Resources>
		<Setter Property="CloseButtonStyle" Value="{StaticResource ColorZoneFlatButton}" />
	</Style>

	<Style x:Shared="False" TargetType="{x:Type local:DialogContent}" BasedOn="{StaticResource AccentDialogContent}" />
</ResourceDictionary>